# -*- coding: utf-8 -*-
"""Copy of gray_contrast_seg.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-5fClSe43IDmFkBcuETHxHlU5wF9mup5
"""

import cv2
import numpy as np
import matplotlib
from matplotlib import pyplot as plt
from google.colab.patches import cv2_imshow

from google.colab import files
uploaded = files.upload()

#original bgr image
c_image = cv2.imread('abc.jpg')
#grayscale image
image = cv2.imread('abc.jpg',0)

#contrast enhancement - image equallization
image_equalized = cv2.equalizeHist(image)

#canny edge detection
edges = cv2.Canny(image_equalized, 100, 200)

# Otsu's thresholding after Gaussian filtering
blur = cv2.GaussianBlur(image_equalized,(5,5),0)
ret3,th3 = cv2.threshold(blur,0,255,cv2.THRESH_BINARY+cv2.THRESH_OTSU)

plt.subplot(121),plt.imshow(c_image[..., ::-1]) #BGR TO RGB
plt.title('Original'), plt.xticks([]), plt.yticks([])

plt.subplot(122),plt.imshow(image, cmap='gray') 
plt.title('grayscale'), plt.xticks([]), plt.yticks([])

plt.show()

plt.subplot(121),plt.imshow(image, cmap='gray') 
plt.title('grayscale'), plt.xticks([]), plt.yticks([])

plt.subplot(122),plt.imshow(image_equalized,cmap = 'gray')
plt.title('Equalized'), plt.xticks([]), plt.yticks([])

plt.show()

plt.subplot(121),plt.imshow(edges,cmap = 'gray')
plt.title('canny'), plt.xticks([]), plt.yticks([])

plt.subplot(122),plt.imshow(th3,cmap = 'gray')
plt.title('otsus'), plt.xticks([]), plt.yticks([])

plt.show()

